#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int dp[501][501] = {0};
int arr[501][501] = {0};

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n;
  cin >> n;

  for (int i = 1; i <= n; i++)
  {
    for (int j = 1; j <= i; j++)
    {
      cin >> arr[i][j];
      dp[i][j] = arr[i][j];
    }
  }

  for (int i = 2; i <= n; i++)
  {
    for (int j = 1; j <= i; j++)
    {
      if (j == 1)
        dp[i][j] = dp[i - 1][j] + arr[i][j];
      else if (j == i)
        dp[i][j] = dp[i - 1][j - 1] + arr[i][j];
      else
        dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j]) + arr[i][j];
    }
  }

  int max_num = 0;
  for (int j = 1; j <= n; j++)
  {
    max_num = max(dp[n][j], max_num);
  }
  cout << max_num << '\n';
}
