#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

#define MAX 1000000

bool BinarySearch(vector<int> a, int key)
{
  int start = 0;
  int end = a.size() - 1;
  int mid;

  while (start <= end)
  {
    mid = (start + end) / 2;
    if (a[mid] == key)
      return true;

    else if (a[mid] < key)
      start = mid + 1;
    else
      end = mid - 1;
  }
  return false;
}

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n, m;
  bool part[MAX];
  cin >> n;
  vector<int> v(n);
  for (int i = 0; i < n; i++)
  {
    cin >> v[i];
  }

  cin >> m;
  vector<int> w(m);
  for (int i = 0; i < m; i++)
  {
    cin >> w[i];
  }

  sort(v.begin(), v.end());

  for (int i : w)
  {
    if (BinarySearch(v, i))
      cout << "yes ";
    else
      cout << "no ";
  }
  cout << '\n';
}
